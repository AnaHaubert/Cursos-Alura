"use strict";function _createForOfIteratorHelper(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,t=function(){};return{s:t,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return o=e.done,e},e:function(e){s=!0,a=e},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var VideoTranscription=function(){function e(){_classCallCheck(this,e),this.taskData=document.querySelector("section.task"),this.courseCode=this.taskData.dataset.courseCode,this.taskId=this.taskData.dataset.taskId,this.hasSeenTask="true"===this.taskData.dataset.alreadySeenTask,this.setupListeners()}return _createClass(e,[{key:"markTaskViewed",value:function(){var e,t,r=this;this.hasSeenTask||(e={courseCode:this.courseCode,videoTaskId:this.taskId},t="/course/"+this.courseCode+"/task/"+this.taskId+"/mark-video",fetch(t,{method:"post",body:JSON.stringify(e)}).then(function(e){e.ok&&(r.changeIcon(),r.hasSeenTask=!0)}))}},{key:"changeIcon",value:function(){document.querySelector(".task-menu-nav-item--selected .task-menu-nav-item-svg").classList.add("task-menu-nav-item-svg--done")}},{key:"setupListeners",value:function(){var e,t=this,r=_createForOfIteratorHelper(document.getElementsByClassName("transcription-toggle"));try{for(r.s();!(e=r.n()).done;)e.value.addEventListener("click",function(){t.markTaskViewed()})}catch(e){r.e(e)}finally{r.f()}}}]),e}();